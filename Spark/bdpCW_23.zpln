{
  "paragraphs": [
    {
      "text": "%pyspark\n\nimport pyspark.sql.functions as f\n#loading data\ndf = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/data/results.csv\")\ndf.show()\ndf.groupBy(\"tournament\").count()\n\n#percentage of types of tournaments held\ndfg=df.groupBy(\"tournament\").count()\ntt=df.count()\ndfg.withColumn('percent', (f.col('count')/tt))#.show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:06:49+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------+----------------+---------+----------+----------+----------+---------+-------------------+-------+\n|      date|       home_team|away_team|home_score|away_score|tournament|     city|            country|neutral|\n+----------+----------------+---------+----------+----------+----------+---------+-------------------+-------+\n|1872-11-30|        Scotland|  England|         0|         0|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1873-03-08|         England| Scotland|         4|         2|  Friendly|   London|            England|  FALSE|\n|1874-03-07|        Scotland|  England|         2|         1|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1875-03-06|         England| Scotland|         2|         2|  Friendly|   London|            England|  FALSE|\n|1876-03-04|        Scotland|  England|         3|         0|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1876-03-25|        Scotland|    Wales|         4|         0|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1877-03-03|         England| Scotland|         1|         3|  Friendly|   London|            England|  FALSE|\n|1877-03-05|           Wales| Scotland|         0|         2|  Friendly|  Wrexham|              Wales|  FALSE|\n|1878-03-02|        Scotland|  England|         7|         2|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1878-03-23|        Scotland|    Wales|         9|         0|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1879-01-18|         England|    Wales|         2|         1|  Friendly|   London|            England|  FALSE|\n|1879-04-05|         England| Scotland|         5|         4|  Friendly|   London|            England|  FALSE|\n|1879-04-07|           Wales| Scotland|         0|         3|  Friendly|  Wrexham|              Wales|  FALSE|\n|1880-03-13|        Scotland|  England|         5|         4|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1880-03-15|           Wales|  England|         2|         3|  Friendly|  Wrexham|              Wales|  FALSE|\n|1880-03-27|        Scotland|    Wales|         5|         1|  Friendly|  Glasgow|           Scotland|  FALSE|\n|1881-02-26|         England|    Wales|         0|         1|  Friendly|Blackburn|            England|  FALSE|\n|1881-03-12|         England| Scotland|         1|         6|  Friendly|   London|            England|  FALSE|\n|1881-03-14|           Wales| Scotland|         1|         5|  Friendly|  Wrexham|              Wales|  FALSE|\n|1882-02-18|Northern Ireland|  England|         0|        13|  Friendly|  Belfast|Republic of Ireland|  FALSE|\n+----------+----------------+---------+----------+----------+----------+---------+-------------------+-------+\nonly showing top 20 rows\n\nDataFrame[tournament: string, count: bigint, percent: double]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=190",
              "$$hashKey": "object:4846"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=191",
              "$$hashKey": "object:4847"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=192",
              "$$hashKey": "object:4848"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1608966675769_25071565",
      "id": "paragraph_1608966675769_25071565",
      "dateCreated": "2020-12-26T07:11:15+0000",
      "dateStarted": "2021-01-04T17:06:18+0000",
      "dateFinished": "2021-01-04T17:06:19+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:4623"
    },
    {
      "text": "%md\n2.3.1\tPercentage of countries that have hosted more than one type of tournament.",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:14:09+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>2.3.1\tPercentage of countries that have hosted more than one type of tournament.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1609780412647_812213283",
      "id": "paragraph_1609780412647_812213283",
      "dateCreated": "2021-01-04T17:13:32+0000",
      "dateStarted": "2021-01-04T17:14:09+0000",
      "dateFinished": "2021-01-04T17:14:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:4624"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql.functions import col,split, explode, expr, when,countDistinct\nfrom pyspark.sql import functions as f\nfrom pyspark.sql import *\n\n#loading data\ndf = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/data/results.csv\")\ndfg=df.groupBy(\"country\",\"tournament\").count().groupBy(\"country\").count()\n\nprint(\"Types of tournaments hold by each country\")\ndfg.sort(col(\"country\").desc()).show(truncate=False)\ndfh=dfg.withColumn('cnttor',expr(\"\"\"IF(count > 1, 'moreThan1', 'lessThan1')\"\"\")).groupBy(\"cnttor\").count()\n\nprint(\"Percentage of countries that have hosted more than one type of tournament\")\ntt=dfh.groupBy().sum().collect()[0][0]\ndfh.withColumn('percent', (f.col('count')/tt)).show()\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:12:14+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Types of tournaments hold by each country\n+----------------+-----+\n|country         |count|\n+----------------+-----+\n|Éire            |1    |\n|Zimbabwe        |7    |\n|Zaïre           |3    |\n|Zanzibar        |2    |\n|Zambia          |7    |\n|Yugoslavia      |6    |\n|Yemen DPR       |2    |\n|Yemen AR        |2    |\n|Yemen           |5    |\n|Western Samoa   |2    |\n|Wales           |6    |\n|Vietnam Republic|3    |\n|Vietnam DR      |1    |\n|Vietnam         |6    |\n|Venezuela       |3    |\n|Vanuatu         |3    |\n|Uzbekistan      |3    |\n|Uruguay         |12   |\n|Upper Volta     |3    |\n|United States   |12   |\n+----------------+-----+\nonly showing top 20 rows\n\nPercentage of countries that have hosted more than one type of tournament\n+---------+-----+-------------------+\n|   cnttor|count|            percent|\n+---------+-----+-------------------+\n|lessThan1|   28|0.10526315789473684|\n|moreThan1|  238| 0.8947368421052632|\n+---------+-----+-------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=201",
              "$$hashKey": "object:4960"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=202",
              "$$hashKey": "object:4961"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=203",
              "$$hashKey": "object:4962"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=204",
              "$$hashKey": "object:4963"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=205",
              "$$hashKey": "object:4964"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=206",
              "$$hashKey": "object:4965"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=207",
              "$$hashKey": "object:4966"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=208",
              "$$hashKey": "object:4967"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1609776407854_22243942",
      "id": "paragraph_1609776407854_22243942",
      "dateCreated": "2021-01-04T16:06:47+0000",
      "dateStarted": "2021-01-04T17:12:14+0000",
      "dateFinished": "2021-01-04T17:12:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:4625"
    },
    {
      "text": "%md\n2.3.2\tHistogram of the total number of matches played overtime in year granularity.",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:14:57+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>2.3.2\tHistogram of the total number of matches played overtime in year granularity.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1609780469770_1349437935",
      "id": "paragraph_1609780469770_1349437935",
      "dateCreated": "2021-01-04T17:14:29+0000",
      "dateStarted": "2021-01-04T17:14:57+0000",
      "dateFinished": "2021-01-04T17:14:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:4626"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import *\nfrom pyspark.sql.functions import to_date, col, year\nfrom pyspark.sql.functions import unix_timestamp\n\n#loading data\ndf= spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/data/results.csv\")\ndf = df.withColumn('date',to_date(unix_timestamp(col('date'), 'yyyy-MM-dd').cast(\"timestamp\")))\ndf = df.withColumn('year', year(\"date\"))\n\ndf.registerTempTable(\"bydate\")\nhistdata=spark.sql('select year from bydate')\n#histdata.collect()\n\n#subset of all year\nhistarray=histdata.rdd.map(lambda row: row.year).sample(False,0.1).collect()          #sample(False,0.1).collect()\nhistarray\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.hist(histarray)\nplt.ylabel('Frequency')\nplt.xlabel('Year')\nplt.show()\n",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:20:55+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "IMG",
            "data": "\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=212",
              "$$hashKey": "object:5097"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=213",
              "$$hashKey": "object:5098"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1608967316570_1774660360",
      "id": "paragraph_1608967316570_1774660360",
      "dateCreated": "2020-12-26T07:21:56+0000",
      "dateStarted": "2021-01-04T17:20:55+0000",
      "dateFinished": "2021-01-04T17:20:56+0000",
      "status": "FINISHED",
      "$$hashKey": "object:4627"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql.functions import col,split, explode, expr, when,countDistinct\nfrom pyspark.sql import functions as f\n\n#loading data\ndf= spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/data/results.csv\")\ndf=df.withColumn('diff', col('home_score')-col('away_score'))\n\n#+------+------------+------------+\n#| diff | winteam    | lostteam   |\n#+-------------------+------------+\n#|   +  | home_team  |  away_team |\n#|   -  | away_team  | home_team  |\n#|   0  |   'draw'   |   'draw'   |\n\ndf=df.withColumn('winteam',expr(\"\"\"IF(diff > 0, home_team, IF(diff < 0, away_team, 'draw'))\"\"\")).withColumn('lostteam',expr(\"\"\"IF(diff > 0, away_team, IF(diff < 0, home_team, 'draw'))\"\"\"))\nteams_win = df.groupBy(\"winteam\").count().withColumnRenamed(\"winteam\", \"team\").withColumnRenamed(\"count\", \"wincount\")\nteams_lost = df.groupBy(\"lostteam\").count().withColumnRenamed(\"lostteam\", \"team\").withColumnRenamed(\"count\", \"lostcount\")\nteam_draw=df.filter(df.diff == 0).select((f.concat_ws('-', df['home_team'],df['away_team']).alias(\"team\"))).withColumn('team',explode(split('team','-'))).groupBy(\"team\").count()\n\ndf_total=teams_win.join(teams_lost,on=['team'],how='outer').join(team_draw,on=['team'],how='outer').show()",
      "user": "anonymous",
      "dateUpdated": "2021-01-04T17:04:54+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------------+--------+---------+-----+\n|               team|wincount|lostcount|count|\n+-------------------+--------+---------+-----+\n|            Kabylia|       1|        3|    2|\n|               Chad|      25|       62|   28|\n|             Kernow|       6|        3|    2|\n|           Provence|       4|       12|    1|\n|           Anguilla|       3|       53|    5|\n|           Paraguay|     255|      273|  188|\n|             Russia|     358|      156|  182|\n|             Bissau|    null|     null|   31|\n|      South Ossetia|       4|        7|    3|\n|U.S. Virgin Islands|       7|       41|    6|\n|              Yemen|      45|      138|   43|\n|     Chinese Taipei|      38|       90|   21|\n|             Madrid|    null|        1| null|\n|            Senegal|     233|      154|  142|\n|              Frøya|       6|       22|    2|\n|             Sweden|     500|      295|  225|\n|           Kiribati|    null|       10|    1|\n|       Two Sicilies|       1|        3| null|\n|           Ynys Môn|      32|       18|   11|\n|             Guyana|      81|      129|   54|\n+-------------------+--------+---------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=411",
              "$$hashKey": "object:5160"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=412",
              "$$hashKey": "object:5161"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=413",
              "$$hashKey": "object:5162"
            },
            {
              "jobUrl": "http://f4a81caf1e33:4040/jobs/job?id=414",
              "$$hashKey": "object:5163"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1609033798775_2135540884",
      "id": "paragraph_1609033798775_2135540884",
      "dateCreated": "2020-12-27T01:49:58+0000",
      "dateStarted": "2020-12-27T05:17:54+0000",
      "dateFinished": "2020-12-27T05:17:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:4628"
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2020-12-27T04:43:53+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1609044233755_867349444",
      "id": "paragraph_1609044233755_867349444",
      "dateCreated": "2020-12-27T04:43:53+0000",
      "status": "READY",
      "$$hashKey": "object:4629"
    }
  ],
  "name": "bdpCW",
  "id": "2FSN42DXK",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/bdpCW"
}